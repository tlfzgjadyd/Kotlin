package chap09.section3

/* < Map >
* Map : Map 컬렉션은 내부적으로 자바의 Map을 이용하여 키(key)와 값(value)로 요소를 저장한다
*      이때 키와 값은 모두 객체이며 키를 통해 구분하기에 키는 중복될 수 없지만 값은 중복될 수 있음
*      기존 값을 수정하고 싶을 경우에는 동일한 키로 새로운 값을 저장하면 된다
* 
* < mapOf() 함수 >
* mapOf()를 통해 불변형 Map을 만들 수 있다
* 
* < Map 주의사항 >
* 요소에 접근할 때에 index가 아니라 키를 통해 접근하기 때문에 대괄호를 사용해서
* langMap[22] 이런식으로 접근해야함에 주의한다
* 만약 ()를 사용해서 접근하고 싶을 경우 get함수를 사용해야됨
* langMap.get(22) 이런식으로 사용한다
* 
* < Map에서 사용하는 멤버들 살펴보기 >
* 1. size : Map 컬렉션의 크기 반환
* 2. keys : Set의 모든 키들을 반환
* 3. values : Set의 모든 값들을 반환
* 4. isEmpty() : Map이 비어있으면 true, 아니면 false 반환
* 5. containsKey(key: K) : 전달인자로 받은 키가 존재하면 true 없으면 false를 반환
* 6. containsValue(value: V) : 전달인자로 받은 값이 존재하면 true 없으면 false를 반환
* 7. get(key: K) : 전달인자로 받은 키에 대응되는 값을 반환, 해당 키가 존재하지 없을 경우 null을 반환
*
* < 반드시 외워야하는 프로퍼티 >
* 1. langMap.keys //맵의 모든 키 출력
* 2. langMap.values //맵의 모든 값 출력
* 
* => 실제로 출력에 사용할땐 이런식으로 사용한다
*    println("langMap.keys = ${langMap.keys}")
*    이걸 왜 외워야하냐면 어떤 키와 값이 있는지 일단 확인한 후에 추가 사용하면 좋기 때문이다
*    잊어버린채로 사용하려고 해봤는데 너무 답답했음
* */

fun main() {
    //1. 불변형 Map의 선언 및 초기화
    val langMap: Map<Int, String> = mapOf(11 to "Java", 22 to "Kotlin", 33 to "C++")
    for ((key, value) in langMap) { //키와 값의 쌍을 출력
        println("key = $key, value = $value")
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //2. 요소에 접근하기
    println("langMap[22] = ${langMap[22]}") //키 22에 대한 값 출력
                                            // 이때 index가 아니라 키를 사용하는 것이기 때문에 대괄호를 사용함에 주의해야됨
    println("langMap.get(22) = ${langMap.get(22)}") //위와 동일한 표현

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //3. 맵의 모든 키 출력하기
    println("langMap.keys = ${langMap.keys}") //맵의 모든 키 출력
                                              // langMap.keys = [11, 22, 33]

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //4. 맵의 모든 값 출력하기
    println("langMap.values = ${langMap.values}") //맵의 모든 값 출력
                                                  // langMap.values = [Java, Kotlin, C++]
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
}